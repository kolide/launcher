// Automatically generated by mockimpl. DO NOT EDIT!

package mock

import (
	"context"

	"github.com/kolide/launcher/service"
	"github.com/kolide/osquery-go/plugin/distributed"
	"github.com/kolide/osquery-go/plugin/logger"
)

var _ service.KolideService = (*KolideService)(nil)

type RequestEnrollmentFunc func(ctx context.Context, enrollSecret string, hostIdentifier string) (string, bool, error)

type RequestConfigFunc func(ctx context.Context, nodeKey string) (string, bool, error)

type PublishLogsFunc func(ctx context.Context, nodeKey string, logType logger.LogType, logs []string) (string, string, bool, error)

type RequestQueriesFunc func(ctx context.Context, nodeKey string) (*distributed.GetQueriesResult, bool, error)

type PublishResultsFunc func(ctx context.Context, nodeKey string, results []distributed.Result) (string, string, bool, error)

type KolideService struct {
	RequestEnrollmentFunc        RequestEnrollmentFunc
	RequestEnrollmentFuncInvoked bool

	RequestConfigFunc        RequestConfigFunc
	RequestConfigFuncInvoked bool

	PublishLogsFunc        PublishLogsFunc
	PublishLogsFuncInvoked bool

	RequestQueriesFunc        RequestQueriesFunc
	RequestQueriesFuncInvoked bool

	PublishResultsFunc        PublishResultsFunc
	PublishResultsFuncInvoked bool
}

func (s *KolideService) RequestEnrollment(ctx context.Context, enrollSecret string, hostIdentifier string) (string, bool, error) {
	s.RequestEnrollmentFuncInvoked = true
	return s.RequestEnrollmentFunc(ctx, enrollSecret, hostIdentifier)
}

func (s *KolideService) RequestConfig(ctx context.Context, nodeKey string) (string, bool, error) {
	s.RequestConfigFuncInvoked = true
	return s.RequestConfigFunc(ctx, nodeKey)
}

func (s *KolideService) PublishLogs(ctx context.Context, nodeKey string, logType logger.LogType, logs []string) (string, string, bool, error) {
	s.PublishLogsFuncInvoked = true
	return s.PublishLogsFunc(ctx, nodeKey, logType, logs)
}

func (s *KolideService) RequestQueries(ctx context.Context, nodeKey string) (*distributed.GetQueriesResult, bool, error) {
	s.RequestQueriesFuncInvoked = true
	return s.RequestQueriesFunc(ctx, nodeKey)
}

func (s *KolideService) PublishResults(ctx context.Context, nodeKey string, results []distributed.Result) (string, string, bool, error) {
	s.PublishResultsFuncInvoked = true
	return s.PublishResultsFunc(ctx, nodeKey, results)
}
