// Automatically generated by mockimpl. DO NOT EDIT!

package mock

import (
	"context"

	"github.com/kolide/launcher/service"
	"github.com/kolide/osquery-go/plugin/distributed"
	"github.com/kolide/osquery-go/plugin/logger"
)

var _ service.KolideService = (*KolideService)(nil)

type RequestEnrollmentFunc func(ctx context.Context, enrollSecret string, hostIdentifer string) (string, bool, error)

type RequestConfigFunc func(ctx context.Context, nodeKey string, version string) (string, bool, error)

type PublishLogsFunc func(ctx context.Context, nodeKey string, version string, logType logger.LogType, logs []string) (string, string, bool, error)

type RequestQueriesFunc func(ctx context.Context, nodeKey string, version string) (*distributed.GetQueriesResult, bool, error)

type PublishResultsFunc func(ctx context.Context, nodeKey string, results []distributed.Result) (string, string, bool, error)

type KolideService struct {
	RequestEnrollmentFunc        RequestEnrollmentFunc
	RequestEnrollmentFuncInvoked bool

	RequestConfigFunc        RequestConfigFunc
	RequestConfigFuncInvoked bool

	PublishLogsFunc        PublishLogsFunc
	PublishLogsFuncInvoked bool

	RequestQueriesFunc        RequestQueriesFunc
	RequestQueriesFuncInvoked bool

	PublishResultsFunc        PublishResultsFunc
	PublishResultsFuncInvoked bool
}

func (s *KolideService) RequestEnrollment(ctx context.Context, enrollSecret string, hostIdentifer string) (string, bool, error) {
	s.RequestEnrollmentFuncInvoked = true
	return s.RequestEnrollmentFunc(ctx, enrollSecret, hostIdentifer)
}

func (s *KolideService) RequestConfig(ctx context.Context, nodeKey string, version string) (string, bool, error) {
	s.RequestConfigFuncInvoked = true
	return s.RequestConfigFunc(ctx, nodeKey, version)
}

func (s *KolideService) PublishLogs(ctx context.Context, nodeKey string, version string, logType logger.LogType, logs []string) (string, string, bool, error) {
	s.PublishLogsFuncInvoked = true
	return s.PublishLogsFunc(ctx, nodeKey, version, logType, logs)
}

func (s *KolideService) RequestQueries(ctx context.Context, nodeKey string, version string) (*distributed.GetQueriesResult, bool, error) {
	s.RequestQueriesFuncInvoked = true
	return s.RequestQueriesFunc(ctx, nodeKey, version)
}

func (s *KolideService) PublishResults(ctx context.Context, nodeKey string, results []distributed.Result) (string, string, bool, error) {
	s.PublishResultsFuncInvoked = true
	return s.PublishResultsFunc(ctx, nodeKey, results)
}
