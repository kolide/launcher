// Code generated by mockery v2.33.3. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// Messenger is an autogenerated mock type for the Messenger type
type Messenger struct {
	mock.Mock
}

// SendMessage provides a mock function with given fields: method, params
func (_m *Messenger) SendMessage(method string, params interface{}) error {
	ret := _m.Called(method, params)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, interface{}) error); ok {
		r0 = rf(method, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMessenger creates a new instance of Messenger. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMessenger(t interface {
	mock.TestingT
	Cleanup(func())
}) *Messenger {
	mock := &Messenger{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
