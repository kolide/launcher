// Code generated by mockery v2.30.1. DO NOT EDIT.

package mocks

import (
	io "io"

	mock "github.com/stretchr/testify/mock"
)

// Actioner is an autogenerated mock type for the actioner type
type Actioner struct {
	mock.Mock
}

// DoAction provides a mock function with given fields: data
func (_m *Actioner) DoAction(data io.Reader) error {
	ret := _m.Called(data)

	var r0 error
	if rf, ok := ret.Get(0).(func(io.Reader) error); ok {
		r0 = rf(data)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewActioner creates a new instance of Actioner. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewActioner(t interface {
	mock.TestingT
	Cleanup(func())
}) *Actioner {
	mock := &Actioner{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
