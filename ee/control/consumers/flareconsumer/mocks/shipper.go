// Code generated by mockery v2.33.3. DO NOT EDIT.

package mocks

import (
	io "io"

	log "github.com/go-kit/kit/log"
	mock "github.com/stretchr/testify/mock"

	types "github.com/kolide/launcher/pkg/agent/types"
)

// Shipper is an autogenerated mock type for the shipper type
type Shipper struct {
	mock.Mock
}

// Ship provides a mock function with given fields: _a0, k, note, flareStream
func (_m *Shipper) Ship(_a0 log.Logger, k types.Knapsack, note string, flareStream io.Reader) error {
	ret := _m.Called(_a0, k, note, flareStream)

	var r0 error
	if rf, ok := ret.Get(0).(func(log.Logger, types.Knapsack, string, io.Reader) error); ok {
		r0 = rf(_a0, k, note, flareStream)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewShipper creates a new instance of Shipper. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewShipper(t interface {
	mock.TestingT
	Cleanup(func())
}) *Shipper {
	mock := &Shipper{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
