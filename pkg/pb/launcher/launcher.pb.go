// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.26.1
// source: launcher.proto

package launcher

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AGENT is added as a new log type, for adding new
// logging capabilities from kolide/agent
type LogCollection_LogType int32

const (
	LogCollection_RESULT LogCollection_LogType = 0
	LogCollection_STATUS LogCollection_LogType = 1
	LogCollection_AGENT  LogCollection_LogType = 2
)

// Enum value maps for LogCollection_LogType.
var (
	LogCollection_LogType_name = map[int32]string{
		0: "RESULT",
		1: "STATUS",
		2: "AGENT",
	}
	LogCollection_LogType_value = map[string]int32{
		"RESULT": 0,
		"STATUS": 1,
		"AGENT":  2,
	}
)

func (x LogCollection_LogType) Enum() *LogCollection_LogType {
	p := new(LogCollection_LogType)
	*p = x
	return p
}

func (x LogCollection_LogType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogCollection_LogType) Descriptor() protoreflect.EnumDescriptor {
	return file_launcher_proto_enumTypes[0].Descriptor()
}

func (LogCollection_LogType) Type() protoreflect.EnumType {
	return &file_launcher_proto_enumTypes[0]
}

func (x LogCollection_LogType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogCollection_LogType.Descriptor instead.
func (LogCollection_LogType) EnumDescriptor() ([]byte, []int) {
	return file_launcher_proto_rawDescGZIP(), []int{6, 0}
}

type HealthCheckResponse_ServingStatus int32

const (
	HealthCheckResponse_UNKNOWN     HealthCheckResponse_ServingStatus = 0
	HealthCheckResponse_SERVING     HealthCheckResponse_ServingStatus = 1
	HealthCheckResponse_NOT_SERVING HealthCheckResponse_ServingStatus = 2
)

// Enum value maps for HealthCheckResponse_ServingStatus.
var (
	HealthCheckResponse_ServingStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "SERVING",
		2: "NOT_SERVING",
	}
	HealthCheckResponse_ServingStatus_value = map[string]int32{
		"UNKNOWN":     0,
		"SERVING":     1,
		"NOT_SERVING": 2,
	}
)

func (x HealthCheckResponse_ServingStatus) Enum() *HealthCheckResponse_ServingStatus {
	p := new(HealthCheckResponse_ServingStatus)
	*p = x
	return p
}

func (x HealthCheckResponse_ServingStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HealthCheckResponse_ServingStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_launcher_proto_enumTypes[1].Descriptor()
}

func (HealthCheckResponse_ServingStatus) Type() protoreflect.EnumType {
	return &file_launcher_proto_enumTypes[1]
}

func (x HealthCheckResponse_ServingStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HealthCheckResponse_ServingStatus.Descriptor instead.
func (HealthCheckResponse_ServingStatus) EnumDescriptor() ([]byte, []int) {
	return file_launcher_proto_rawDescGZIP(), []int{9, 0}
}

type AgentApiRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeKey string `protobuf:"bytes,1,opt,name=node_key,json=nodeKey,proto3" json:"node_key,omitempty"`
}

func (x *AgentApiRequest) Reset() {
	*x = AgentApiRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_launcher_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentApiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentApiRequest) ProtoMessage() {}

func (x *AgentApiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_launcher_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentApiRequest.ProtoReflect.Descriptor instead.
func (*AgentApiRequest) Descriptor() ([]byte, []int) {
	return file_launcher_proto_rawDescGZIP(), []int{0}
}

func (x *AgentApiRequest) GetNodeKey() string {
	if x != nil {
		return x.NodeKey
	}
	return ""
}

type AgentApiResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message       string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	ErrorCode     string `protobuf:"bytes,2,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	NodeInvalid   bool   `protobuf:"varint,3,opt,name=node_invalid,json=nodeInvalid,proto3" json:"node_invalid,omitempty"`
	DisableDevice bool   `protobuf:"varint,4,opt,name=disable_device,json=disableDevice,proto3" json:"disable_device,omitempty"`
}

func (x *AgentApiResponse) Reset() {
	*x = AgentApiResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_launcher_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentApiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentApiResponse) ProtoMessage() {}

func (x *AgentApiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_launcher_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentApiResponse.ProtoReflect.Descriptor instead.
func (*AgentApiResponse) Descriptor() ([]byte, []int) {
	return file_launcher_proto_rawDescGZIP(), []int{1}
}

func (x *AgentApiResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AgentApiResponse) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *AgentApiResponse) GetNodeInvalid() bool {
	if x != nil {
		return x.NodeInvalid
	}
	return false
}

func (x *AgentApiResponse) GetDisableDevice() bool {
	if x != nil {
		return x.DisableDevice
	}
	return false
}

type EnrollmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnrollSecret      string             `protobuf:"bytes,1,opt,name=enroll_secret,json=enrollSecret,proto3" json:"enroll_secret,omitempty"`
	HostIdentifier    string             `protobuf:"bytes,2,opt,name=host_identifier,json=hostIdentifier,proto3" json:"host_identifier,omitempty"`
	EnrollmentDetails *EnrollmentDetails `protobuf:"bytes,3,opt,name=enrollment_details,json=enrollmentDetails,proto3" json:"enrollment_details,omitempty"`
}

func (x *EnrollmentRequest) Reset() {
	*x = EnrollmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_launcher_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnrollmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnrollmentRequest) ProtoMessage() {}

func (x *EnrollmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_launcher_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnrollmentRequest.ProtoReflect.Descriptor instead.
func (*EnrollmentRequest) Descriptor() ([]byte, []int) {
	return file_launcher_proto_rawDescGZIP(), []int{2}
}

func (x *EnrollmentRequest) GetEnrollSecret() string {
	if x != nil {
		return x.EnrollSecret
	}
	return ""
}

func (x *EnrollmentRequest) GetHostIdentifier() string {
	if x != nil {
		return x.HostIdentifier
	}
	return ""
}

func (x *EnrollmentRequest) GetEnrollmentDetails() *EnrollmentDetails {
	if x != nil {
		return x.EnrollmentDetails
	}
	return nil
}

type EnrollmentDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OsVersion       string `protobuf:"bytes,1,opt,name=os_version,json=osVersion,proto3" json:"os_version,omitempty"`
	OsBuild         string `protobuf:"bytes,2,opt,name=os_build,json=osBuild,proto3" json:"os_build,omitempty"`
	OsPlatform      string `protobuf:"bytes,3,opt,name=os_platform,json=osPlatform,proto3" json:"os_platform,omitempty"`
	Hostname        string `protobuf:"bytes,4,opt,name=hostname,proto3" json:"hostname,omitempty"`
	HardwareVendor  string `protobuf:"bytes,5,opt,name=hardware_vendor,json=hardwareVendor,proto3" json:"hardware_vendor,omitempty"`
	HardwareModel   string `protobuf:"bytes,6,opt,name=hardware_model,json=hardwareModel,proto3" json:"hardware_model,omitempty"`
	HardwareSerial  string `protobuf:"bytes,7,opt,name=hardware_serial,json=hardwareSerial,proto3" json:"hardware_serial,omitempty"`
	OsqueryVersion  string `protobuf:"bytes,8,opt,name=osquery_version,json=osqueryVersion,proto3" json:"osquery_version,omitempty"`
	LauncherVersion string `protobuf:"bytes,9,opt,name=launcher_version,json=launcherVersion,proto3" json:"launcher_version,omitempty"`
	OsName          string `protobuf:"bytes,10,opt,name=os_name,json=osName,proto3" json:"os_name,omitempty"`
	OsPlatformLike  string `protobuf:"bytes,11,opt,name=os_platform_like,json=osPlatformLike,proto3" json:"os_platform_like,omitempty"`
	HardwareUuid    string `protobuf:"bytes,12,opt,name=hardware_uuid,json=hardwareUuid,proto3" json:"hardware_uuid,omitempty"`
}

func (x *EnrollmentDetails) Reset() {
	*x = EnrollmentDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_launcher_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnrollmentDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnrollmentDetails) ProtoMessage() {}

func (x *EnrollmentDetails) ProtoReflect() protoreflect.Message {
	mi := &file_launcher_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnrollmentDetails.ProtoReflect.Descriptor instead.
func (*EnrollmentDetails) Descriptor() ([]byte, []int) {
	return file_launcher_proto_rawDescGZIP(), []int{3}
}

func (x *EnrollmentDetails) GetOsVersion() string {
	if x != nil {
		return x.OsVersion
	}
	return ""
}

func (x *EnrollmentDetails) GetOsBuild() string {
	if x != nil {
		return x.OsBuild
	}
	return ""
}

func (x *EnrollmentDetails) GetOsPlatform() string {
	if x != nil {
		return x.OsPlatform
	}
	return ""
}

func (x *EnrollmentDetails) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *EnrollmentDetails) GetHardwareVendor() string {
	if x != nil {
		return x.HardwareVendor
	}
	return ""
}

func (x *EnrollmentDetails) GetHardwareModel() string {
	if x != nil {
		return x.HardwareModel
	}
	return ""
}

func (x *EnrollmentDetails) GetHardwareSerial() string {
	if x != nil {
		return x.HardwareSerial
	}
	return ""
}

func (x *EnrollmentDetails) GetOsqueryVersion() string {
	if x != nil {
		return x.OsqueryVersion
	}
	return ""
}

func (x *EnrollmentDetails) GetLauncherVersion() string {
	if x != nil {
		return x.LauncherVersion
	}
	return ""
}

func (x *EnrollmentDetails) GetOsName() string {
	if x != nil {
		return x.OsName
	}
	return ""
}

func (x *EnrollmentDetails) GetOsPlatformLike() string {
	if x != nil {
		return x.OsPlatformLike
	}
	return ""
}

func (x *EnrollmentDetails) GetHardwareUuid() string {
	if x != nil {
		return x.HardwareUuid
	}
	return ""
}

type EnrollmentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeKey       string `protobuf:"bytes,1,opt,name=node_key,json=nodeKey,proto3" json:"node_key,omitempty"`
	NodeInvalid   bool   `protobuf:"varint,2,opt,name=node_invalid,json=nodeInvalid,proto3" json:"node_invalid,omitempty"`
	ErrorCode     string `protobuf:"bytes,3,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	DisableDevice bool   `protobuf:"varint,4,opt,name=disable_device,json=disableDevice,proto3" json:"disable_device,omitempty"`
}

func (x *EnrollmentResponse) Reset() {
	*x = EnrollmentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_launcher_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnrollmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnrollmentResponse) ProtoMessage() {}

func (x *EnrollmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_launcher_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnrollmentResponse.ProtoReflect.Descriptor instead.
func (*EnrollmentResponse) Descriptor() ([]byte, []int) {
	return file_launcher_proto_rawDescGZIP(), []int{4}
}

func (x *EnrollmentResponse) GetNodeKey() string {
	if x != nil {
		return x.NodeKey
	}
	return ""
}

func (x *EnrollmentResponse) GetNodeInvalid() bool {
	if x != nil {
		return x.NodeInvalid
	}
	return false
}

func (x *EnrollmentResponse) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *EnrollmentResponse) GetDisableDevice() bool {
	if x != nil {
		return x.DisableDevice
	}
	return false
}

// kolide/cloud will be generating well-structured json already, so forward
// it along instead of de/re/de-serializing it as a protobuf too
// this might make sense to convert to full proto later
type ConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigJsonBlob string `protobuf:"bytes,1,opt,name=config_json_blob,json=configJsonBlob,proto3" json:"config_json_blob,omitempty"`
	NodeInvalid    bool   `protobuf:"varint,2,opt,name=node_invalid,json=nodeInvalid,proto3" json:"node_invalid,omitempty"`
	ErrorCode      string `protobuf:"bytes,3,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	DisableDevice  bool   `protobuf:"varint,4,opt,name=disable_device,json=disableDevice,proto3" json:"disable_device,omitempty"`
}

func (x *ConfigResponse) Reset() {
	*x = ConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_launcher_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigResponse) ProtoMessage() {}

func (x *ConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_launcher_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigResponse.ProtoReflect.Descriptor instead.
func (*ConfigResponse) Descriptor() ([]byte, []int) {
	return file_launcher_proto_rawDescGZIP(), []int{5}
}

func (x *ConfigResponse) GetConfigJsonBlob() string {
	if x != nil {
		return x.ConfigJsonBlob
	}
	return ""
}

func (x *ConfigResponse) GetNodeInvalid() bool {
	if x != nil {
		return x.NodeInvalid
	}
	return false
}

func (x *ConfigResponse) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *ConfigResponse) GetDisableDevice() bool {
	if x != nil {
		return x.DisableDevice
	}
	return false
}

type LogCollection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeKey   string                `protobuf:"bytes,1,opt,name=node_key,json=nodeKey,proto3" json:"node_key,omitempty"`
	LogType   LogCollection_LogType `protobuf:"varint,2,opt,name=log_type,json=logType,proto3,enum=kolide.agent.LogCollection_LogType" json:"log_type,omitempty"`
	Logs      []*LogCollection_Log  `protobuf:"bytes,3,rep,name=logs,proto3" json:"logs,omitempty"`
	ErrorCode string                `protobuf:"bytes,4,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
}

func (x *LogCollection) Reset() {
	*x = LogCollection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_launcher_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogCollection) ProtoMessage() {}

func (x *LogCollection) ProtoReflect() protoreflect.Message {
	mi := &file_launcher_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogCollection.ProtoReflect.Descriptor instead.
func (*LogCollection) Descriptor() ([]byte, []int) {
	return file_launcher_proto_rawDescGZIP(), []int{6}
}

func (x *LogCollection) GetNodeKey() string {
	if x != nil {
		return x.NodeKey
	}
	return ""
}

func (x *LogCollection) GetLogType() LogCollection_LogType {
	if x != nil {
		return x.LogType
	}
	return LogCollection_RESULT
}

func (x *LogCollection) GetLogs() []*LogCollection_Log {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *LogCollection) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

// a query collection contains many queries
type QueryCollection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Queries       []*QueryCollection_Query `protobuf:"bytes,1,rep,name=queries,proto3" json:"queries,omitempty"`
	NodeInvalid   bool                     `protobuf:"varint,2,opt,name=node_invalid,json=nodeInvalid,proto3" json:"node_invalid,omitempty"`
	ErrorCode     string                   `protobuf:"bytes,3,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	DisableDevice bool                     `protobuf:"varint,4,opt,name=disable_device,json=disableDevice,proto3" json:"disable_device,omitempty"`
}

func (x *QueryCollection) Reset() {
	*x = QueryCollection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_launcher_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCollection) ProtoMessage() {}

func (x *QueryCollection) ProtoReflect() protoreflect.Message {
	mi := &file_launcher_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCollection.ProtoReflect.Descriptor instead.
func (*QueryCollection) Descriptor() ([]byte, []int) {
	return file_launcher_proto_rawDescGZIP(), []int{7}
}

func (x *QueryCollection) GetQueries() []*QueryCollection_Query {
	if x != nil {
		return x.Queries
	}
	return nil
}

func (x *QueryCollection) GetNodeInvalid() bool {
	if x != nil {
		return x.NodeInvalid
	}
	return false
}

func (x *QueryCollection) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *QueryCollection) GetDisableDevice() bool {
	if x != nil {
		return x.DisableDevice
	}
	return false
}

// a result collection contains many results
type ResultCollection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeKey   string                     `protobuf:"bytes,1,opt,name=node_key,json=nodeKey,proto3" json:"node_key,omitempty"`
	Results   []*ResultCollection_Result `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	ErrorCode string                     `protobuf:"bytes,3,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
}

func (x *ResultCollection) Reset() {
	*x = ResultCollection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_launcher_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultCollection) ProtoMessage() {}

func (x *ResultCollection) ProtoReflect() protoreflect.Message {
	mi := &file_launcher_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultCollection.ProtoReflect.Descriptor instead.
func (*ResultCollection) Descriptor() ([]byte, []int) {
	return file_launcher_proto_rawDescGZIP(), []int{8}
}

func (x *ResultCollection) GetNodeKey() string {
	if x != nil {
		return x.NodeKey
	}
	return ""
}

func (x *ResultCollection) GetResults() []*ResultCollection_Result {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *ResultCollection) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status HealthCheckResponse_ServingStatus `protobuf:"varint,1,opt,name=status,proto3,enum=kolide.agent.HealthCheckResponse_ServingStatus" json:"status,omitempty"`
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_launcher_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_launcher_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_launcher_proto_rawDescGZIP(), []int{9}
}

func (x *HealthCheckResponse) GetStatus() HealthCheckResponse_ServingStatus {
	if x != nil {
		return x.Status
	}
	return HealthCheckResponse_UNKNOWN
}

type LogCollection_Log struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *LogCollection_Log) Reset() {
	*x = LogCollection_Log{}
	if protoimpl.UnsafeEnabled {
		mi := &file_launcher_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogCollection_Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogCollection_Log) ProtoMessage() {}

func (x *LogCollection_Log) ProtoReflect() protoreflect.Message {
	mi := &file_launcher_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogCollection_Log.ProtoReflect.Descriptor instead.
func (*LogCollection_Log) Descriptor() ([]byte, []int) {
	return file_launcher_proto_rawDescGZIP(), []int{6, 0}
}

func (x *LogCollection_Log) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type QueryCollection_Query struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Query string `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *QueryCollection_Query) Reset() {
	*x = QueryCollection_Query{}
	if protoimpl.UnsafeEnabled {
		mi := &file_launcher_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCollection_Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCollection_Query) ProtoMessage() {}

func (x *QueryCollection_Query) ProtoReflect() protoreflect.Message {
	mi := &file_launcher_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCollection_Query.ProtoReflect.Descriptor instead.
func (*QueryCollection_Query) Descriptor() ([]byte, []int) {
	return file_launcher_proto_rawDescGZIP(), []int{7, 0}
}

func (x *QueryCollection_Query) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *QueryCollection_Query) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

// status is moved here instead of appearing as a map of id[status]
// on the ResultCollection, as it does in the osq docs
type ResultCollection_Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string                               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Rows   []*ResultCollection_Result_ResultRow `protobuf:"bytes,2,rep,name=rows,proto3" json:"rows,omitempty"`
	Status int32                                `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ResultCollection_Result) Reset() {
	*x = ResultCollection_Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_launcher_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultCollection_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultCollection_Result) ProtoMessage() {}

func (x *ResultCollection_Result) ProtoReflect() protoreflect.Message {
	mi := &file_launcher_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultCollection_Result.ProtoReflect.Descriptor instead.
func (*ResultCollection_Result) Descriptor() ([]byte, []int) {
	return file_launcher_proto_rawDescGZIP(), []int{8, 0}
}

func (x *ResultCollection_Result) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ResultCollection_Result) GetRows() []*ResultCollection_Result_ResultRow {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *ResultCollection_Result) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type ResultCollection_Result_ResultRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Columns []*ResultCollection_Result_ResultRow_Column `protobuf:"bytes,1,rep,name=columns,proto3" json:"columns,omitempty"`
}

func (x *ResultCollection_Result_ResultRow) Reset() {
	*x = ResultCollection_Result_ResultRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_launcher_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultCollection_Result_ResultRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultCollection_Result_ResultRow) ProtoMessage() {}

func (x *ResultCollection_Result_ResultRow) ProtoReflect() protoreflect.Message {
	mi := &file_launcher_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultCollection_Result_ResultRow.ProtoReflect.Descriptor instead.
func (*ResultCollection_Result_ResultRow) Descriptor() ([]byte, []int) {
	return file_launcher_proto_rawDescGZIP(), []int{8, 0, 0}
}

func (x *ResultCollection_Result_ResultRow) GetColumns() []*ResultCollection_Result_ResultRow_Column {
	if x != nil {
		return x.Columns
	}
	return nil
}

type ResultCollection_Result_ResultRow_Column struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ResultCollection_Result_ResultRow_Column) Reset() {
	*x = ResultCollection_Result_ResultRow_Column{}
	if protoimpl.UnsafeEnabled {
		mi := &file_launcher_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultCollection_Result_ResultRow_Column) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultCollection_Result_ResultRow_Column) ProtoMessage() {}

func (x *ResultCollection_Result_ResultRow_Column) ProtoReflect() protoreflect.Message {
	mi := &file_launcher_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultCollection_Result_ResultRow_Column.ProtoReflect.Descriptor instead.
func (*ResultCollection_Result_ResultRow_Column) Descriptor() ([]byte, []int) {
	return file_launcher_proto_rawDescGZIP(), []int{8, 0, 0, 0}
}

func (x *ResultCollection_Result_ResultRow_Column) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ResultCollection_Result_ResultRow_Column) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_launcher_proto protoreflect.FileDescriptor

var file_launcher_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0c, 0x6b, 0x6f, 0x6c, 0x69, 0x64, 0x65, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x22, 0x2c,
	0x0a, 0x0f, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x41, 0x70, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x4b, 0x65, 0x79, 0x22, 0x95, 0x01, 0x0a,
	0x10, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x25, 0x0a,
	0x0e, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x22, 0xb1, 0x01, 0x0a, 0x11, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e,
	0x72, 0x6f, 0x6c, 0x6c, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12,
	0x27, 0x0a, 0x0f, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x4e, 0x0a, 0x12, 0x65, 0x6e, 0x72, 0x6f,
	0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6b, 0x6f, 0x6c, 0x69, 0x64, 0x65, 0x2e, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x2e, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x11, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xbf, 0x03, 0x0a, 0x11, 0x45, 0x6e, 0x72,
	0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x6f, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a,
	0x08, 0x6f, 0x73, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6f, 0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x73, 0x5f, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f,
	0x73, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73,
	0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73,
	0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72,
	0x65, 0x5f, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12, 0x25,
	0x0a, 0x0e, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72,
	0x65, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x27,
	0x0a, 0x0f, 0x6f, 0x73, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x73, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x6c, 0x61, 0x75, 0x6e, 0x63,
	0x68, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6f,
	0x73, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x73, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72,
	0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x68, 0x61,
	0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x55, 0x75, 0x69, 0x64, 0x22, 0x98, 0x01, 0x0a, 0x12, 0x45,
	0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x0c,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0xa3, 0x01, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x62, 0x6c, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4a, 0x73, 0x6f, 0x6e, 0x42, 0x6c,
	0x6f, 0x62, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x6e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0x87, 0x02, 0x0a, 0x0d,
	0x4c, 0x6f, 0x67, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a,
	0x08, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6e, 0x6f, 0x64, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x3e, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x6b, 0x6f, 0x6c,
	0x69, 0x64, 0x65, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x6f, 0x67, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x6f, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x07, 0x6c, 0x6f, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6b, 0x6f, 0x6c, 0x69, 0x64, 0x65, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x6f, 0x67, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x6f, 0x67, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x1a, 0x19, 0x0a, 0x03,
	0x4c, 0x6f, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2c, 0x0a, 0x07, 0x4c, 0x6f, 0x67, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x10, 0x00, 0x12, 0x0a,
	0x0a, 0x06, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x47,
	0x45, 0x4e, 0x54, 0x10, 0x02, 0x22, 0xe8, 0x01, 0x0a, 0x0f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x07, 0x71, 0x75, 0x65,
	0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6b, 0x6f, 0x6c,
	0x69, 0x64, 0x65, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x07, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x6e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x1a, 0x2d, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x22, 0x99, 0x03, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x4b, 0x65, 0x79,
	0x12, 0x3f, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x6b, 0x6f, 0x6c, 0x69, 0x64, 0x65, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x1a, 0x89, 0x02, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x43, 0x0a, 0x04, 0x72,
	0x6f, 0x77, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6b, 0x6f, 0x6c, 0x69,
	0x64, 0x65, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x6f, 0x77, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x91, 0x01, 0x0a, 0x09, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x6f, 0x77, 0x12, 0x50, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x6b, 0x6f, 0x6c, 0x69, 0x64, 0x65,
	0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x6f, 0x77, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52,
	0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x1a, 0x32, 0x0a, 0x06, 0x43, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x9a, 0x01, 0x0a,
	0x13, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x6b, 0x6f, 0x6c, 0x69, 0x64, 0x65, 0x2e, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x3a, 0x0a,
	0x0d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b,
	0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53,
	0x45, 0x52, 0x56, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x4f, 0x54, 0x5f,
	0x53, 0x45, 0x52, 0x56, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x32, 0xf6, 0x03, 0x0a, 0x03, 0x41, 0x70,
	0x69, 0x12, 0x58, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x45, 0x6e, 0x72, 0x6f,
	0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x2e, 0x6b, 0x6f, 0x6c, 0x69, 0x64, 0x65, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6b, 0x6f, 0x6c, 0x69, 0x64, 0x65,
	0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1d, 0x2e, 0x6b,
	0x6f, 0x6c, 0x69, 0x64, 0x65, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x41, 0x70, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6b, 0x6f,
	0x6c, 0x69, 0x64, 0x65, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1d, 0x2e,
	0x6b, 0x6f, 0x6c, 0x69, 0x64, 0x65, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x41, 0x70, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6b,
	0x6f, 0x6c, 0x69, 0x64, 0x65, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12, 0x4c, 0x0a,
	0x0b, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x1b, 0x2e, 0x6b,
	0x6f, 0x6c, 0x69, 0x64, 0x65, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x6f, 0x67, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x1e, 0x2e, 0x6b, 0x6f, 0x6c, 0x69,
	0x64, 0x65, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x41, 0x70,
	0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0e, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x1e, 0x2e,
	0x6b, 0x6f, 0x6c, 0x69, 0x64, 0x65, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x1e, 0x2e,
	0x6b, 0x6f, 0x6c, 0x69, 0x64, 0x65, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x51, 0x0a, 0x0b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x1d,
	0x2e, 0x6b, 0x6f, 0x6c, 0x69, 0x64, 0x65, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x41, 0x70, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x6b, 0x6f, 0x6c, 0x69, 0x64, 0x65, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2e, 0x2f, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x65,
	0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_launcher_proto_rawDescOnce sync.Once
	file_launcher_proto_rawDescData = file_launcher_proto_rawDesc
)

func file_launcher_proto_rawDescGZIP() []byte {
	file_launcher_proto_rawDescOnce.Do(func() {
		file_launcher_proto_rawDescData = protoimpl.X.CompressGZIP(file_launcher_proto_rawDescData)
	})
	return file_launcher_proto_rawDescData
}

var file_launcher_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_launcher_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_launcher_proto_goTypes = []interface{}{
	(LogCollection_LogType)(0),                       // 0: kolide.agent.LogCollection.LogType
	(HealthCheckResponse_ServingStatus)(0),           // 1: kolide.agent.HealthCheckResponse.ServingStatus
	(*AgentApiRequest)(nil),                          // 2: kolide.agent.AgentApiRequest
	(*AgentApiResponse)(nil),                         // 3: kolide.agent.AgentApiResponse
	(*EnrollmentRequest)(nil),                        // 4: kolide.agent.EnrollmentRequest
	(*EnrollmentDetails)(nil),                        // 5: kolide.agent.EnrollmentDetails
	(*EnrollmentResponse)(nil),                       // 6: kolide.agent.EnrollmentResponse
	(*ConfigResponse)(nil),                           // 7: kolide.agent.ConfigResponse
	(*LogCollection)(nil),                            // 8: kolide.agent.LogCollection
	(*QueryCollection)(nil),                          // 9: kolide.agent.QueryCollection
	(*ResultCollection)(nil),                         // 10: kolide.agent.ResultCollection
	(*HealthCheckResponse)(nil),                      // 11: kolide.agent.HealthCheckResponse
	(*LogCollection_Log)(nil),                        // 12: kolide.agent.LogCollection.Log
	(*QueryCollection_Query)(nil),                    // 13: kolide.agent.QueryCollection.Query
	(*ResultCollection_Result)(nil),                  // 14: kolide.agent.ResultCollection.Result
	(*ResultCollection_Result_ResultRow)(nil),        // 15: kolide.agent.ResultCollection.Result.ResultRow
	(*ResultCollection_Result_ResultRow_Column)(nil), // 16: kolide.agent.ResultCollection.Result.ResultRow.Column
}
var file_launcher_proto_depIdxs = []int32{
	5,  // 0: kolide.agent.EnrollmentRequest.enrollment_details:type_name -> kolide.agent.EnrollmentDetails
	0,  // 1: kolide.agent.LogCollection.log_type:type_name -> kolide.agent.LogCollection.LogType
	12, // 2: kolide.agent.LogCollection.logs:type_name -> kolide.agent.LogCollection.Log
	13, // 3: kolide.agent.QueryCollection.queries:type_name -> kolide.agent.QueryCollection.Query
	14, // 4: kolide.agent.ResultCollection.results:type_name -> kolide.agent.ResultCollection.Result
	1,  // 5: kolide.agent.HealthCheckResponse.status:type_name -> kolide.agent.HealthCheckResponse.ServingStatus
	15, // 6: kolide.agent.ResultCollection.Result.rows:type_name -> kolide.agent.ResultCollection.Result.ResultRow
	16, // 7: kolide.agent.ResultCollection.Result.ResultRow.columns:type_name -> kolide.agent.ResultCollection.Result.ResultRow.Column
	4,  // 8: kolide.agent.Api.RequestEnrollment:input_type -> kolide.agent.EnrollmentRequest
	2,  // 9: kolide.agent.Api.RequestConfig:input_type -> kolide.agent.AgentApiRequest
	2,  // 10: kolide.agent.Api.RequestQueries:input_type -> kolide.agent.AgentApiRequest
	8,  // 11: kolide.agent.Api.PublishLogs:input_type -> kolide.agent.LogCollection
	10, // 12: kolide.agent.Api.PublishResults:input_type -> kolide.agent.ResultCollection
	2,  // 13: kolide.agent.Api.CheckHealth:input_type -> kolide.agent.AgentApiRequest
	6,  // 14: kolide.agent.Api.RequestEnrollment:output_type -> kolide.agent.EnrollmentResponse
	7,  // 15: kolide.agent.Api.RequestConfig:output_type -> kolide.agent.ConfigResponse
	9,  // 16: kolide.agent.Api.RequestQueries:output_type -> kolide.agent.QueryCollection
	3,  // 17: kolide.agent.Api.PublishLogs:output_type -> kolide.agent.AgentApiResponse
	3,  // 18: kolide.agent.Api.PublishResults:output_type -> kolide.agent.AgentApiResponse
	11, // 19: kolide.agent.Api.CheckHealth:output_type -> kolide.agent.HealthCheckResponse
	14, // [14:20] is the sub-list for method output_type
	8,  // [8:14] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_launcher_proto_init() }
func file_launcher_proto_init() {
	if File_launcher_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_launcher_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentApiRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_launcher_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentApiResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_launcher_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnrollmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_launcher_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnrollmentDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_launcher_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnrollmentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_launcher_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_launcher_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogCollection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_launcher_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCollection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_launcher_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultCollection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_launcher_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthCheckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_launcher_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogCollection_Log); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_launcher_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCollection_Query); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_launcher_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultCollection_Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_launcher_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultCollection_Result_ResultRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_launcher_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultCollection_Result_ResultRow_Column); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_launcher_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_launcher_proto_goTypes,
		DependencyIndexes: file_launcher_proto_depIdxs,
		EnumInfos:         file_launcher_proto_enumTypes,
		MessageInfos:      file_launcher_proto_msgTypes,
	}.Build()
	File_launcher_proto = out.File
	file_launcher_proto_rawDesc = nil
	file_launcher_proto_goTypes = nil
	file_launcher_proto_depIdxs = nil
}
