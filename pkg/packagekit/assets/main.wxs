<?xml version="1.0" encoding="UTF-8"?>
<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi" xmlns:util="http://schemas.microsoft.com/wix/UtilExtension">
<?if $(sys.BUILDARCH)="x86"?>
    <?define Program_Files="ProgramFilesFolder"?>
<?elseif $(sys.BUILDARCH)="x64"?>
    <?define Program_Files="ProgramFiles64Folder"?>
<?else?>
    <?error Unsupported value of sys.BUILDARCH=$(sys.BUILDARCH)?>
<?endif?>

  <Product
      Id="{{.ProductCode}}"
      Name="Kolide {{.Opts.Name}} {{.Opts.Identifier}} $(sys.BUILDARCH) {{.Opts.Version}}"
      Language="1033"
      Version="{{.Opts.Version}}"
      Manufacturer="https://kolide.com"
      UpgradeCode="{{.UpgradeCode}}" >

    <Package
	Id="*"
	Keywords='Installer'
	Description="Kolide {{.Opts.Name}} {{.Opts.Identifier}}"
	Comments="Kolide {{.Opts.Name}} {{.Opts.Identifier}}"
	InstallerVersion="300"
	Compressed="yes"
	InstallScope="perMachine"
	InstallPrivileges="elevated"
	Languages="1033" />

    <!-- This holds the files generated by heat -->
    <Media Id='1' Cabinet="go.cab" EmbedCab="yes" CompressionLevel="high" />

    <MajorUpgrade AllowDowngrades="yes" />

    <!-- Set INSTALLDIR to "c:\Program Files\Kolide". With appropriate
	 WiX replacements along the way
	 Set DATADIR to "c:\ProgramData\Kolide"

	 It's up to the caller to decide which directories to use
    -->
    <Directory Id="TARGETDIR" Name="SourceDir">
      <Directory Id="$(var.Program_Files)">
	<Directory Id="PROGDIR" Name="Kolide"/>
      </Directory>
      <Directory Id="CommonAppDataFolder">
	<Directory Id="DATADIR" Name="Kolide"/>
      </Directory>
    </Directory>


    <DirectoryRef Id="TARGETDIR">
      <Component Id="InstallerInfoRegistryEntries" Guid="*">
	<RegistryKey Root="HKLM"
		     Key="Software\Kolide\Launcher\{{.Opts.Identifier}}"
		     Action="createAndRemoveOnUninstall">
	  <RegistryValue Key="DownloadPath" Value="[OriginalDatabase]" Type="string" />
	  <RegistryValue Key="Identifier" Value="{{.Opts.Identifier}}" Type="string" />
	  <RegistryValue Key="User" Value="[LogonUser]" Type="string" />
	  <RegistryValue Key="Version" Value="{{.Opts.Version}}" Type="string" />
	</RegistryKey>
      </Component>
    </DirectoryRef>



    <!-- Install the files -->
    <Feature
	Id="LauncherFiles"
	Title="Launcher"
	Level="1"
	Display="hidden">
      <ComponentGroupRef Id="AppFiles" />
    </Feature>

    <Feature
	Id="InstallerInfo"
	Title="InstallerInfo"
	Level="1"
	Display="hidden">
      <ComponentRef Id="InstallerInfoRegistryEntries" />
    </Feature>


    <!-- The icon is used in the add/remove program dialog -->
    <Icon Id="icon.ico" SourceFile="kolide.ico"/>
    <Property Id="ARPPRODUCTICON" Value="icon.ico" />

    {{if .Opts.WixUI}}
    <!--
	UI Notes:
	WiX provides a UI toolkit, and some precanned templates.

https://stackoverflow.com/questions/16865666/cant-show-dialog-in-wix-installer
says that: If a package has any dialogs, Windows Installer requires
that it have a minimum set to show UI, mostly under error
conditions. The ICE20 documentation has the full list.

https://docs.microsoft.com/en-us/windows/win32/msi/ice20?redirectedfrom=MSDN describes the following as needed:
* FilesInUse Dialog
* Error Dialog
* Exit Dialog
* UserExit Dialog
* FatalError Dialog

Luckily. we can import these from wix.

This is based on a modified WixUI_Minimal
    -->

    <WixVariable Id="WixUIBannerBmp" Value="msi_banner.bmp" />
    <WixVariable Id="WixUIDialogBmp" Value="msi_splash.bmp" />

    <UI>
      <TextStyle Id="WixUI_Font_Normal" FaceName="Tahoma" Size="8" />
      <TextStyle Id="WixUI_Font_Bigger" FaceName="Tahoma" Size="12" />
      <TextStyle Id="WixUI_Font_Title" FaceName="Tahoma" Size="9" Bold="yes" />

      <Property Id="DefaultUIFont" Value="WixUI_Font_Normal" />
      <Property Id="WixUI_Mode" Value="Minimal" />

      <DialogRef Id="ErrorDlg" />
      <DialogRef Id="FatalError" />
      <DialogRef Id="FilesInUse" />
      <DialogRef Id="MsiRMFilesInUse" />
      <DialogRef Id="UserExit" />

      <Publish Dialog="ExitDialog" Control="Finish" Event="EndDialog" Value="Return" Order="999">1</Publish>

      <Publish Dialog="VerifyReadyDlg" Control="Back" Event="NewDialog" Value="MaintenanceTypeDlg">1</Publish>

      <!-- Keep this. Else weird things happen -->
      <Publish Dialog="MaintenanceWelcomeDlg" Control="Next" Event="NewDialog" Value="MaintenanceTypeDlg">1</Publish>

      <Publish Dialog="MaintenanceTypeDlg" Control="RepairButton" Event="NewDialog" Value="VerifyReadyDlg">1</Publish>
      <Publish Dialog="MaintenanceTypeDlg" Control="RemoveButton" Event="NewDialog" Value="VerifyReadyDlg">1</Publish>
      <Publish Dialog="MaintenanceTypeDlg" Control="Back" Event="NewDialog" Value="MaintenanceWelcomeDlg">1</Publish>


      <InstallUISequence>
      </InstallUISequence>

      <Property Id="ARPNOMODIFY" Value="1" />
    </UI>

    <UIRef Id="WixUI_Common" />
{{ end }}
  </Product>
</Wix>
