// Code generated by mockery v2.23.1. DO NOT EDIT.

package mocks

import (
	keys "github.com/kolide/launcher/pkg/agent/flags/keys"
	mock "github.com/stretchr/testify/mock"

	time "time"
)

// flagValueOverride is an autogenerated mock type for the flagValueOverride type
type flagValueOverride struct {
	mock.Mock
}

// Start provides a mock function with given fields: key, value, duration, expiredCallback
func (_m *flagValueOverride) Start(key keys.FlagKey, value interface{}, duration time.Duration, expiredCallback func(keys.FlagKey)) {
	_m.Called(key, value, duration, expiredCallback)
}

// Value provides a mock function with given fields:
func (_m *flagValueOverride) Value() interface{} {
	ret := _m.Called()

	var r0 interface{}
	if rf, ok := ret.Get(0).(func() interface{}); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	return r0
}

type mockConstructorTestingTnewFlagValueOverride interface {
	mock.TestingT
	Cleanup(func())
}

// newFlagValueOverride creates a new instance of flagValueOverride. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newFlagValueOverride(t mockConstructorTestingTnewFlagValueOverride) *flagValueOverride {
	mock := &flagValueOverride{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
